// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"GinStart/Ioc"
	"GinStart/Repository"
	"GinStart/Repository/Cache"
	"GinStart/Repository/Dao"
	"GinStart/Service"
	"GinStart/Web"
	"GinStart/Web/Jwt"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitWireServer() *gin.Engine {
	cmdable := InitRedis()
	handler := Jwt.NewRedisJWTHandler(cmdable)
	logger := InitLogger()
	v := Ioc.InitMiddleWare(cmdable, handler, logger)
	db := InitDB()
	userDao := Dao.NewUserDao(db)
	userCache := Cache.NewUserCache(cmdable)
	userRepository := Repository.NewCacheUserRepository(userDao, userCache)
	userService := Service.NewUserService(userRepository, logger)
	codeCache := Cache.NewCodeCache(cmdable)
	codeRepository := Repository.NewCodeRepository(codeCache)
	service := Ioc.InitSMSService()
	codeService := Service.NewCodeService(codeRepository, service)
	userHandler := Handler.NewUserHandler(userService, codeService, handler)
	articleDao := Dao.NewArticleGormDao(db)
	articleRepository := Repository.NewArticleRepositoryImpl(articleDao)
	articleService := Service.NewArticleServiceImpl(articleRepository)
	articleHandler := Handler.NewArticleHandler(articleService, logger)
	wechatService := Ioc.InitWechatService()
	oAuth2WechatHandler := Handler.NewOAuth2WechatHandler(wechatService)
	engine := Ioc.InitWebServer(v, userHandler, articleHandler, oAuth2WechatHandler)
	return engine
}

func InitArticleHandler() *Handler.ArticleHandler {
	db := InitDB()
	articleDao := Dao.NewArticleGormDao(db)
	articleRepository := Repository.NewArticleRepositoryImpl(articleDao)
	articleService := Service.NewArticleServiceImpl(articleRepository)
	logger := InitLogger()
	articleHandler := Handler.NewArticleHandler(articleService, logger)
	return articleHandler
}

// wire.go:

var thirdPartySet = wire.NewSet(InitDB, InitRedis,
	InitLogger)
